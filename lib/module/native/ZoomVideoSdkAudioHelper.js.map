{"version":3,"names":["NativeModules","RNZoomVideoSdkAudioHelper","ZoomVideoSdkAudioHelper","startAudio","stopAudio","muteAudio","userId","unmuteAudio","subscribe","unsubscribe","setSpeaker","isOn","getSpeakerStatus","canSwitchSpeaker","resetAudioSession","cleanAudioSession"],"sources":["ZoomVideoSdkAudioHelper.ts"],"sourcesContent":["import { NativeModules } from 'react-native';\nimport type { Errors } from '../native/ZoomVideoSdk';\n\nconst { RNZoomVideoSdkAudioHelper } = NativeModules;\n\nexport type ZoomVideoSdkAudioHelperType = {\n  startAudio: () => Promise<Errors>;\n  stopAudio: () => Promise<Errors>;\n  muteAudio: (userId: string) => Promise<Errors>;\n  unmuteAudio: (userId: string) => Promise<Errors>;\n  subscribe: () => Promise<Errors>;\n  unsubscribe: () => Promise<Errors>;\n  setSpeaker: (isOn: boolean) => Promise<number>;\n  getSpeakerStatus: () => Promise<boolean>;\n  canSwitchSpeaker: () => Promise<boolean>;\n  resetAudioSession: () => Promise<boolean>;\n  cleanAudioSession: () => void;\n};\n\nexport class ZoomVideoSdkAudioHelper implements ZoomVideoSdkAudioHelperType {\n  async startAudio() {\n    return await RNZoomVideoSdkAudioHelper.startAudio();\n  }\n\n  async stopAudio() {\n    return await RNZoomVideoSdkAudioHelper.stopAudio();\n  }\n\n  async muteAudio(userId: string) {\n    return await RNZoomVideoSdkAudioHelper.muteAudio(userId);\n  }\n\n  async unmuteAudio(userId: string) {\n    return await RNZoomVideoSdkAudioHelper.unmuteAudio(userId);\n  }\n\n  async subscribe() {\n    return await RNZoomVideoSdkAudioHelper.subscribe();\n  }\n\n  async unsubscribe() {\n    return await RNZoomVideoSdkAudioHelper.unsubscribe();\n  }\n\n  async setSpeaker(isOn: boolean) {\n    return await RNZoomVideoSdkAudioHelper.setSpeaker(isOn);\n  }\n\n  async getSpeakerStatus() {\n    return await RNZoomVideoSdkAudioHelper.getSpeakerStatus();\n  }\n\n  async canSwitchSpeaker() {\n    return await RNZoomVideoSdkAudioHelper.canSwitchSpeaker();\n  }\n\n  async resetAudioSession() {\n    return await RNZoomVideoSdkAudioHelper.resetAudioSession();\n  }\n\n  async cleanAudioSession() {\n    return await RNZoomVideoSdkAudioHelper.cleanAudioSession();\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAG5C,MAAM;EAAEC;AAA0B,CAAC,GAAGD,aAAa;AAgBnD,OAAO,MAAME,uBAAuB,CAAwC;EAC1E,MAAMC,UAAUA,CAAA,EAAG;IACjB,OAAO,MAAMF,yBAAyB,CAACE,UAAU,CAAC,CAAC;EACrD;EAEA,MAAMC,SAASA,CAAA,EAAG;IAChB,OAAO,MAAMH,yBAAyB,CAACG,SAAS,CAAC,CAAC;EACpD;EAEA,MAAMC,SAASA,CAACC,MAAc,EAAE;IAC9B,OAAO,MAAML,yBAAyB,CAACI,SAAS,CAACC,MAAM,CAAC;EAC1D;EAEA,MAAMC,WAAWA,CAACD,MAAc,EAAE;IAChC,OAAO,MAAML,yBAAyB,CAACM,WAAW,CAACD,MAAM,CAAC;EAC5D;EAEA,MAAME,SAASA,CAAA,EAAG;IAChB,OAAO,MAAMP,yBAAyB,CAACO,SAAS,CAAC,CAAC;EACpD;EAEA,MAAMC,WAAWA,CAAA,EAAG;IAClB,OAAO,MAAMR,yBAAyB,CAACQ,WAAW,CAAC,CAAC;EACtD;EAEA,MAAMC,UAAUA,CAACC,IAAa,EAAE;IAC9B,OAAO,MAAMV,yBAAyB,CAACS,UAAU,CAACC,IAAI,CAAC;EACzD;EAEA,MAAMC,gBAAgBA,CAAA,EAAG;IACvB,OAAO,MAAMX,yBAAyB,CAACW,gBAAgB,CAAC,CAAC;EAC3D;EAEA,MAAMC,gBAAgBA,CAAA,EAAG;IACvB,OAAO,MAAMZ,yBAAyB,CAACY,gBAAgB,CAAC,CAAC;EAC3D;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,OAAO,MAAMb,yBAAyB,CAACa,iBAAiB,CAAC,CAAC;EAC5D;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,OAAO,MAAMd,yBAAyB,CAACc,iBAAiB,CAAC,CAAC;EAC5D;AACF"}